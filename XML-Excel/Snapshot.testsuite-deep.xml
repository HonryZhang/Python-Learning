<?xml version="1.0" encoding="UTF-8"?>
<data>
<testsuite id="1386" name="Snapshot" >
<node_order><![CDATA[10]]></node_order>
<details><![CDATA[<p>
	快照和clone都是COW，如果只是创建快照和clone，不会对object进行复制</p>
<p>
	在对原image进行写时，会将有快照标签的object全部拷贝（COW），为了保证COW的持续时间长，对原image的写限制带宽，如200K/s，fio参数rate=200k，在COW的过程中，进行故障注入。</p>
<p>
	clone在flatten时，会将快照的object完整拷贝出来，在拷贝的过程中，进行故障注入。</p>
<p>
	快照的备份，则是在快照导出和导入时进行故障注入</p>
]]></details> 
<testsuite id="1521" name="全量快照rollback" >
<node_order><![CDATA[1]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="1524" name="关闭osd进程（mon与osd共存）">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[200]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）和nbd1（pool2）都创建成ext4的文件系统，分别挂载到/nbd0 和/nbd1目录下，在/nbd0 目录下写一个20G大小的文件20g.file，完成后拷贝到/nbd1目录下</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，拷贝完成后，对nbd0和nbd1做快照</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对两个文件系统/nbd0 /nbd1进行写文件操作（一个写同名文件，rate=200k，保证COW持续的时间长，一个写不同名称的文件），对裸设备nbd2（pool1），nbd3（pool2）进行裸设备随机读写</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将node1节点的三个osd进程关闭，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	进程关闭后，crush tree上将osd进程标记为down，更新osdmap</p>
<p>
	io短暂归零后恢复，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	1分钟后，将node1节点的osd进程开启，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	进程开启成功，crush tree上标记为up，最后集群状态为OK</p>
<p>
	io性能短暂降低后恢复到较高水平，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	待集群恢复为OK后，在node2,node3上重复步骤1和步骤2</p>
]]></actions>
	<expectedresults><![CDATA[]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	待集群恢复为OK后，将nbd0和nbd1的文件系统的io停止，nbd2，nbd3的读写继续。umount文件系统，unmap nbd0，nbd1，将nbd0和nbd1的快照回滚，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	umount文件系统成功，unmap nbd成功，回滚成功</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	将nbd0和nbd1重新map，mount文件系统，diff -s比较两个文件20g.file，检查文件一致性，检查io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	nbd map，mount文件系统成功，两个文件系统内的文件20g.file一致，没有出错</p>
<p>
	nbd2，nbd3的io没有影响，没有数据一致性问题，集群状态正常</p>
<p>
	&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0，nbd1快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1531" name="kill osd进程（mon与osd共存）">
	<node_order><![CDATA[1]]></node_order>
	<externalid><![CDATA[201]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）和nbd1（pool2）都创建成ext4的文件系统，分别挂载到/nbd0 和/nbd1目录下，在/nbd0 目录下写一个20G大小的文件20g.file，完成后拷贝到/nbd1目录下</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，拷贝完成后，对nbd0和nbd1做快照</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对两个文件系统/nbd0 /nbd1进行写文件操作<span style="font-size: 13.3333px;">（一个写同名文件，rate=200k，保证COW持续的时间长，一个写不同名称的文件）</span><span style="font-size: 12px;">，对裸设备nbd2（pool1），nbd3（pool2）进行裸设备随机读写</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将node1节点的三个osd进程kill -9，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	进程kill -9后，crush tree上将osd进程标记为down，更新osdmap</p>
<p>
	io短暂归零后恢复，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	1分钟后，将node1节点的osd进程开启，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	进程开启成功，crush tree上标记为up，最后集群状态为OK</p>
<p>
	io性能短暂降低后恢复到较高水平，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	待集群恢复为OK后，在node2,node3上重复步骤1和步骤2</p>
]]></actions>
	<expectedresults><![CDATA[]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	待集群恢复为OK后，将nbd0和nbd1的文件系统的io停止，nbd2，nbd3的读写继续。umount文件系统，unmap nbd0，nbd1，将nbd0和nbd1的快照回滚，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	umount文件系统成功，unmap nbd成功，回滚成功</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	将nbd0和nbd1重新map，mount文件系统，diff -s比较两个文件20g.file，检查文件一致性，检查io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	nbd map，mount文件系统成功，两个文件系统内的文件20g.file一致，没有出错</p>
<p>
	nbd2，nbd3的io没有影响，没有数据一致性问题，集群状态正常</p>
<div>
	&nbsp;</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0，nbd1的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1533" name="kill 所有进程（mon与osd共存）">
	<node_order><![CDATA[2]]></node_order>
	<externalid><![CDATA[202]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）和nbd1（pool2）都创建成ext4的文件系统，分别挂载到/nbd0 和/nbd1目录下，在/nbd0 目录下写一个20G大小的文件20g.file，完成后拷贝到/nbd1目录下</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，拷贝完成后，对nbd0和nbd1做快照</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对两个文件系统/nbd0 /nbd1进行写文件操作<span style="font-size: 13.3333px;">（一个写同名文件，rate=200k，保证COW持续的时间长，一个写不同名称的文件）</span><span style="font-size: 12px;">，对裸设备nbd2（pool1），nbd3（pool2）进行裸设备随机读写</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将node1，node2，node3上的所有osd，mon进程全部kill -9，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	kill -9所有进程后，osd进程所占用内存释放，集群不可用，无法查看集群状态</p>
<p>
	client端读写fio全部挂起</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	1分钟后，将所有的server节点的mon，osd进程都重启，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	所有进程启动成功，集群状态正常</p>
<p>
	io恢复，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	读写运行5分钟后，nbd0，nbd1文件系统的io中断，nbd2，nbd3裸设备的io继续，umount文件系统，unmap nbd0，nbd1，对nbd0，nbd1，回滚。</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	umount文件系统成功，unmap nbd成功，回滚成功</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	将nbd0，nbd1重新map，重新mount文件系统，diff -s比较两个文件系统的文件20g.file是否一致</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	nbd map，mount文件系统成功</p>
<p>
	两个文件比较一致，nbd2，nbd3读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0，nbd1的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1535" name="服务器前端与Public Switch间长时间物理中断（mon与osd共存）">
	<node_order><![CDATA[3]]></node_order>
	<externalid><![CDATA[203]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）和nbd1（pool2）都创建成ext4的文件系统，分别挂载到/nbd0 和/nbd1目录下，在/nbd0 目录下写一个20G大小的文件20g.file，完成后拷贝到/nbd1目录下</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，拷贝完成后，对nbd0和nbd1做快照</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对两个文件系统/nbd0 /nbd1进行写文件操作<span style="font-size: 13.3333px;">（一个写同名文件，rate=200k，保证COW持续的时间长，一个写不同名称的文件）</span><span style="font-size: 12px;">，对裸设备nbd2（pool1），nbd3（pool2）进行裸设备随机读写</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，中断node1节点的public网络，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node1节点的osd在crush tree上标记为down，leader mon切换。</p>
<p>
	io短暂归零后恢复（归零30秒以内），没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	1分钟后，将node1节点的public网络恢复，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	插回线缆后，连接恢复，osd重新标记为up，重新变为leader mon，集群状态最后为OK</p>
<p>
	io性能短时间降低后恢复到较高水平，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	待集群状态恢复ok后，在node2节点上重复步骤1和2</p>
]]></actions>
	<expectedresults><![CDATA[]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	运行io 5分钟后，将文件系统的io中断，nbd2，nbd3的io继续下发，umount文件系统，unmap nbd0，nbd1</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	umount，unmap成功</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	对nbd0，nbd1进行快照回滚，然后map，mount文件系统，比较两个文件系统里面的文件20g.file</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	回滚成功</p>
<p>
	map，mount文件系统成功，文件比较一致</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0，nbd1的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1537" name="服务器后端与Cluster Switch间长时间物理中断（mon与osd共存）">
	<node_order><![CDATA[4]]></node_order>
	<externalid><![CDATA[204]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）和nbd1（pool2）都创建成ext4的文件系统，分别挂载到/nbd0 和/nbd1目录下，在/nbd0 目录下写一个20G大小的文件20g.file，完成后拷贝到/nbd1目录下</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，拷贝完成后，对nbd0和nbd1做快照</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对两个文件系统/nbd0 /nbd1进行写文件操作<span style="font-size: 13.3333px;">（一个写同名文件，rate=200k，保证COW持续的时间长，一个写不同名称的文件）</span><span style="font-size: 12px;">，对裸设备nbd2（pool1），nbd3（pool2）进行裸设备随机读写</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，中断node1节点的cluster网络，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node1节点的osd在crush tree上标记为down，leader mon不切换。</p>
<p>
	io短暂归零后恢复（归零30秒以内），没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	1分钟后，将node1节点的cluster网络恢复，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	插回线缆后，连接恢复，osd重新标记为up，集群状态最后为OK</p>
<p>
	io性能短时间降低后恢复到较高水平，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	待集群状态恢复ok后，在node2节点上重复步骤1和2</p>
]]></actions>
	<expectedresults><![CDATA[]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	运行io 5分钟后，将文件系统的io中断，nbd2，nbd3的io继续下发，umount文件系统，unmap nbd0，nbd1</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	umount，unmap成功</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	对nbd0，nbd1进行快照回滚，然后map，mount文件系统，比较两个文件系统里面的文件20g.file</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	回滚成功</p>
<p>
	map，mount文件系统成功，文件比较一致</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0，nbd1的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1539" name="网络全部物理中断（mon与osd共存）">
	<node_order><![CDATA[5]]></node_order>
	<externalid><![CDATA[205]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）和nbd1（pool2）都创建成ext4的文件系统，分别挂载到/nbd0 和/nbd1目录下，在/nbd0 目录下写一个20G大小的文件20g.file，完成后拷贝到/nbd1目录下</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，拷贝完成后，对nbd0和nbd1做快照</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对两个文件系统/nbd0 /nbd1进行写文件操作<span style="font-size: 13.3333px;">（一个写同名文件，rate=200k，保证COW持续的时间长，一个写不同名称的文件）</span><span style="font-size: 12px;">，对裸设备nbd2（pool1），nbd3（pool2）进行裸设备随机读写</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将node1，node2，node3的public，cluster网络全部中断</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	fio读写全部挂起，集群不能查看状态，集群不可用</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	3分钟后，恢复所有节点的网络，观察集群状态，查看io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	网络恢复后，集群状态正常</p>
<p>
	fio恢复读写，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	运行5分钟后，中断文件系统读写，nbd2，nbd3的裸盘读写继续下发，umount文件系统，unmap nbd0，nbd1，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	umount，unmap正常，集群状态正常</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	将nbd0，nbd1的快照回滚，然后重新map nbd0，nbd1，mount文件系统，比较20g.file文件的一致性</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	快照回滚成功，重新map，mount文件系统成功</p>
<p>
	文件一致，nbd2，nbd3的读写没有问题</p>
<p>
	集群状态正常</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0，nbd1的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1566" name="server端重启（mon与osd共存）">
	<node_order><![CDATA[6]]></node_order>
	<externalid><![CDATA[206]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）和nbd1（pool2）都创建成ext4的文件系统，分别挂载到/nbd0 和/nbd1目录下，在/nbd0 目录下写一个20G大小的文件20g.file，完成后拷贝到/nbd1目录下</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，拷贝完成后，对nbd0和nbd1做快照</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对两个文件系统/nbd0 /nbd1进行写文件操作<span style="font-size: 13.3333px;">（一个写同名文件，rate=200k，保证COW持续的时间长，一个写不同名称的文件）</span><span style="font-size: 12px;">，对裸设备nbd2（pool1），nbd3（pool2）进行裸设备随机读写</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中重启node1节点，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node1节点重启后，该节点上的osd在crush tree上标记为down，leader mon切换</p>
<p>
	io短暂归零（归零时间30秒以内）后恢复，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	node1节点重启后，启动该节点上的所有osd，mon进程，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	启动mon，osd进程成功，osd在crush tree上重新标记为up，mon变为leader mon，最后集群状态为OK</p>
<p>
	io性能短暂降低后恢复到较高水平，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	待集群恢复为OK后，将node1，node2，node3节点全部重启，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	server端都重启后，集群不可用</p>
<p>
	fio读写挂起</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	待节点重启后，启动所有节点上的osd，mon进程，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd，mon进程启动成功，集群状态ok</p>
<p>
	fio读写恢复，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	io运行5分钟后，中断文件系统的读写，nbd2，nbd3的裸盘读写继续下发，umount文件系统nbd0，nbd1，unmap nbd0，nbd1，对nbd0，nbd1进行回滚，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	umount，unmap成功</p>
<p>
	nbd0，nbd1回滚成功</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	重新map nbd0，nbd1，mount文件系统，比较文件20g.file，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	map，mount成功</p>
<p>
	文件比较一致</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[7]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0，nbd1的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1568" name="server端panic （mon与osd共存）">
	<node_order><![CDATA[7]]></node_order>
	<externalid><![CDATA[207]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）和nbd1（pool2）都创建成ext4的文件系统，分别挂载到/nbd0 和/nbd1目录下，在/nbd0 目录下写一个20G大小的文件20g.file，完成后拷贝到/nbd1目录下</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，拷贝完成后，对nbd0和nbd1做快照</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对两个文件系统/nbd0 /nbd1进行写文件操作<span style="font-size: 13.3333px;">（一个写同名文件，rate=200k，保证COW持续的时间长，一个写不同名称的文件）</span><span style="font-size: 12px;">，对裸设备nbd2（pool1），nbd3（pool2）进行裸设备随机读写</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中panic node1节点，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node1节点重启后，该节点上的osd在crush tree上标记为down，leader mon切换</p>
<p>
	io短暂归零（归零时间30秒以内）后恢复，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	node1节点重启后，启动该节点上的所有osd，mon进程，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	启动mon，osd进程成功，osd在crush tree上重新标记为up，mon变为leader mon，最后集群状态为OK</p>
<p>
	io性能短暂降低后恢复到较高水平，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	待集群恢复为OK后，将node1，node2，node3节点全部panic，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	server端都重启后，集群不可用</p>
<p>
	fio读写挂起</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	待节点重启后，启动所有节点上的osd，mon进程，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd，mon进程启动成功，集群状态ok</p>
<p>
	fio读写恢复，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	io运行5分钟后，中断文件系统的读写，nbd2，nbd3的裸盘读写继续下发，umount文件系统nbd0，nbd1，unmap nbd0，nbd1，对nbd0，nbd1进行回滚，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	umount，unmap成功</p>
<p>
	nbd0，nbd1回滚成功</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	重新map nbd0，nbd1，mount文件系统，比较文件20g.file，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	map，mount成功</p>
<p>
	文件比较一致</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[7]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0，nbd1的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1582" name="逻辑踢盘（mon与osd共存）">
	<node_order><![CDATA[8]]></node_order>
	<externalid><![CDATA[208]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）和nbd1（pool2）都创建成ext4的文件系统，分别挂载到/nbd0 和/nbd1目录下，在/nbd0 目录下写一个20G大小的文件20g.file，完成后拷贝到/nbd1目录下</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，拷贝完成后，对nbd0和nbd1做快照</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对两个文件系统/nbd0 /nbd1进行写文件操作<span style="font-size: 13.3333px;">（一个写同名文件，rate=200k，保证COW持续的时间长，一个写不同名称的文件）</span><span style="font-size: 12px;">，对裸设备nbd2（pool1），nbd3（pool2）进行裸设备随机读写</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，在node1上逻辑删除磁盘2个，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	踢出磁盘后，该磁盘上的osd进程退出，在crush tree上标记为down</p>
<p>
	io短暂归零（30秒以内），没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	1分钟后，将踢出的磁盘重新加载，启动osd，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	启动osd成功，加入集群成功，最后集群状态为OK</p>
<p>
	io性能短暂降低后恢复到较高水平，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	待集群恢复为OK后，在node2，node3上重复步骤1,2</p>
]]></actions>
	<expectedresults><![CDATA[]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	io运行5分钟后，中断文件系统的读写，nbd2，nbd3的裸盘读写继续下发，umount文件系统nbd0，nbd1，unmap nbd0，nbd1，对nbd0，nbd1进行回滚，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	umount，unmap成功</p>
<p>
	nbd0，nbd1回滚成功</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	重新map nbd0，nbd1，mount文件系统，比较文件20g.file，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	map，mount成功</p>
<p>
	文件比较一致</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0，nbd1的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1737" name="osd脱离、加入集群（mon与osd共存）">
	<node_order><![CDATA[9]]></node_order>
	<externalid><![CDATA[231]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）和nbd1（pool2）都创建成ext4的文件系统，分别挂载到/nbd0 和/nbd1目录下，在/nbd0 目录下写一个20G大小的文件20g.file，完成后拷贝到/nbd1目录下</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，拷贝完成后，对nbd0和nbd1做快照</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对两个文件系统/nbd0 /nbd1进行写文件操作<span style="font-size: 13.3333px;">（一个写同名文件，rate=200k，保证COW持续的时间长，一个写不同名称的文件）</span><span style="font-size: 12px;">，对裸设备nbd2（pool1），nbd3（pool2）进行裸设备随机读写</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将node2上的两个osd out出集群，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	out过程中，有pg迁移，io状态正常，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	out过程完成后，将这两个osd进程关闭，1分钟后，重启该osd进程，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd关闭，重启成功，crush tree上看到是up状态，out状态</p>
<p>
	io正常无问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	将这两个osd重新加入集群，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	in的过程中有pg迁移，最后集群为ok状态</p>
<p>
	io正常无问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	io运行5分钟后，中断文件系统的读写，nbd2，nbd3的裸盘读写继续下发，umount文件系统nbd0，nbd1，unmap nbd0，nbd1，对nbd0，nbd1进行回滚，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	umount，unmap成功</p>
<p>
	nbd0，nbd1回滚成功</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	重新map nbd0，nbd1，mount文件系统，比较文件20g.file，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	map，mount成功</p>
<p>
	文件比较一致</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0，nbd1的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1739" name="删除osd（mon与osd共存）">
	<node_order><![CDATA[10]]></node_order>
	<externalid><![CDATA[232]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）和nbd1（pool2）都创建成ext4的文件系统，分别挂载到/nbd0 和/nbd1目录下，在/nbd0 目录下写一个20G大小的文件20g.file，完成后拷贝到/nbd1目录下</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，拷贝完成后，对nbd0和nbd1做快照</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对两个文件系统/nbd0 /nbd1进行写文件操作<span style="font-size: 13.3333px;">（一个写同名文件，rate=200k，保证COW持续的时间长，一个写不同名称的文件）</span><span style="font-size: 12px;">，对裸设备nbd2（pool1），nbd3（pool2）进行裸设备随机读写</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将node3上的一个osd进程用脚本删除，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd上的pg迁移到其他pg，最后集群状态为OK</p>
<p>
	io读写没有问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	io运行5分钟后，中断文件系统的读写，nbd2，nbd3的裸盘读写继续下发，umount文件系统nbd0，nbd1，unmap nbd0，nbd1，对nbd0，nbd1进行回滚，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	umount，unmap成功</p>
<p>
	nbd0，nbd1回滚成功</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	重新map nbd0，nbd1，mount文件系统，比较文件20g.file，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	map，mount成功</p>
<p>
	文件比较一致</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0，nbd1的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1741" name="添加osd（mon与osd共存）">
	<node_order><![CDATA[11]]></node_order>
	<externalid><![CDATA[233]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）和nbd1（pool2）都创建成ext4的文件系统，分别挂载到/nbd0 和/nbd1目录下，在/nbd0 目录下写一个20G大小的文件20g.file，完成后拷贝到/nbd1目录下</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，拷贝完成后，对nbd0和nbd1做快照</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对两个文件系统/nbd0 /nbd1进行写文件操作<span style="font-size: 13.3333px;">（一个写同名文件，rate=200k，保证COW持续的时间长，一个写不同名称的文件）</span><span style="font-size: 12px;">，对裸设备nbd2（pool1），nbd3（pool2）进行裸设备随机读写</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将node3上添加一个osd，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	部分pg迁移到该osd上，最后集群状态为OK</p>
<p>
	io读写没有问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	io运行5分钟后，中断文件系统的读写，nbd2，nbd3的裸盘读写继续下发，umount文件系统nbd0，nbd1，unmap nbd0，nbd1，对nbd0，nbd1进行回滚，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	umount，unmap成功</p>
<p>
	nbd0，nbd1回滚成功</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	重新map nbd0，nbd1，mount文件系统，比较文件20g.file，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	map，mount成功</p>
<p>
	文件比较一致</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0，nbd1的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1743" name="暂停集群（mon与osd共存）">
	<node_order><![CDATA[12]]></node_order>
	<externalid><![CDATA[234]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）和nbd1（pool2）都创建成ext4的文件系统，分别挂载到/nbd0 和/nbd1目录下，在/nbd0 目录下写一个20G大小的文件20g.file，完成后拷贝到/nbd1目录下</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，拷贝完成后，对nbd0和nbd1做快照</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对两个文件系统/nbd0 /nbd1进行写文件操作<span style="font-size: 13.3333px;">（一个写同名文件，rate=200k，保证COW持续的时间长，一个写不同名称的文件）</span><span style="font-size: 12px;">，对裸设备nbd2（pool1），nbd3（pool2）进行裸设备随机读写</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将整个集群暂停，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	集群暂停后，集群不能提供读写，io挂起</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	3分钟后，将集群暂停取消，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	集群可以提供读写服务，io继续下发，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	io运行5分钟后，中断文件系统的读写，nbd2，nbd3的裸盘读写继续下发，umount文件系统nbd0，nbd1，unmap nbd0，nbd1，对nbd0，nbd1进行回滚，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	umount，unmap成功</p>
<p>
	nbd0，nbd1回滚成功</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	重新map nbd0，nbd1，mount文件系统，比较文件20g.file，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	map，mount成功</p>
<p>
	文件比较一致</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0，nbd1的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1773" name="server端掉电（mon与osd共存）">
	<node_order><![CDATA[13]]></node_order>
	<externalid><![CDATA[235]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）和nbd1（pool2）都创建成ext4的文件系统，分别挂载到/nbd0 和/nbd1目录下，在/nbd0 目录下写一个20G大小的文件20g.file，完成后拷贝到/nbd1目录下</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，拷贝完成后，对nbd0和nbd1做快照</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对两个文件系统/nbd0 /nbd1进行写文件操作<span style="font-size: 13.3333px;">（一个写同名文件，rate=200k，保证COW持续的时间长，一个写不同名称的文件）</span><span style="font-size: 12px;">，对裸设备nbd2（pool1），nbd3（pool2）进行裸设备随机读写</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中将node1，node2节点掉电，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	掉电后，集群不可用，io挂起</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	node1，node2重新上电后，重启node1，node2上的所有osd、mon进程，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node1，node2上的osd，mon启动成功，集群状态为OK</p>
<p>
	io恢复，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	io运行5分钟后，中断文件系统的读写，nbd2，nbd3的裸盘读写继续下发，umount文件系统nbd0，nbd1，unmap nbd0，nbd1，对nbd0，nbd1进行回滚，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	umount，unmap成功</p>
<p>
	nbd0，nbd1回滚成功</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	重新map nbd0，nbd1，mount文件系统，比较文件20g.file，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	map，mount成功</p>
<p>
	文件比较一致</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0，nbd1的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1775" name="server端关机/开机（mon与osd共存）">
	<node_order><![CDATA[14]]></node_order>
	<externalid><![CDATA[236]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）和nbd1（pool2）都创建成ext4的文件系统，分别挂载到/nbd0 和/nbd1目录下，在/nbd0 目录下写一个20G大小的文件20g.file，完成后拷贝到/nbd1目录下</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，拷贝完成后，对nbd0和nbd1做快照</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对两个文件系统/nbd0 /nbd1进行写文件操作<span style="font-size: 13.3333px;">（一个写同名文件，rate=200k，保证COW持续的时间长，一个写不同名称的文件）</span><span style="font-size: 12px;">，对裸设备nbd2（pool1），nbd3（pool2）进行裸设备随机读写</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中将node2，node3 shutdown关机，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	关机后，集群不可用，io挂起</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	node2，node3开机后，重启node2，node3上的所有osd、mon进程，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node2，node3上的osd，mon启动成功，集群状态为OK</p>
<p>
	io恢复，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	io运行5分钟后，中断文件系统的读写，nbd2，nbd3的裸盘读写继续下发，umount文件系统nbd0，nbd1，unmap nbd0，nbd1，对nbd0，nbd1进行回滚，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	umount，unmap成功</p>
<p>
	nbd0，nbd1回滚成功</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	重新map nbd0，nbd1，mount文件系统，比较文件20g.file，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	map，mount成功</p>
<p>
	文件比较一致</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0，nbd1的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1777" name="server端非NTP同步（mon与osd共存）">
	<node_order><![CDATA[15]]></node_order>
	<externalid><![CDATA[237]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）和nbd1（pool2）都创建成ext4的文件系统，分别挂载到/nbd0 和/nbd1目录下，在/nbd0 目录下写一个20G大小的文件20g.file，完成后拷贝到/nbd1目录下</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，拷贝完成后，对nbd0和nbd1做快照</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对两个文件系统/nbd0 /nbd1进行写文件操作<span style="font-size: 13.3333px;">（一个写同名文件，rate=200k，保证COW持续的时间长，一个写不同名称的文件）</span><span style="font-size: 12px;">，对裸设备nbd2（pool1），nbd3（pool2）进行裸设备随机读写</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将node2节点取消NTP时钟同步，调整node2的时间比集群时间快5分钟，观察集群状态5分钟，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node2上的osd在crush tree上标记为down，mon退出集群仲裁</p>
<p>
	io短暂归零后（归零30秒以内），恢复正常，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	node2启动NTP同步时间，与集群时间相差0.05秒以内，重启该节点的所有osd、mon进程，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	NTP时钟同步成功</p>
<p>
	osd标记为up，mon加入仲裁，集群状态OK</p>
<p>
	io没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将node3节点取消NTP时钟同步，调整node3的时间比集群时间慢5分钟，观察集群状态5分钟，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	集群有告警，时钟偏移</p>
<p>
	io正常没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	node3启动NTP同步时间，与集群时间相差0.05秒以内，重启该节点的所有osd、mon进程，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	NTP时钟同步成功</p>
<p>
	osd标记为up，mon加入仲裁，集群状态OK</p>
<p>
	io没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	io运行5分钟后，中断文件系统的读写，nbd2，nbd3的裸盘读写继续下发，umount文件系统nbd0，nbd1，unmap nbd0，nbd1，对nbd0，nbd1进行回滚，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	umount，unmap成功</p>
<p>
	nbd0，nbd1回滚成功</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	重新map nbd0，nbd1，mount文件系统，比较文件20g.file，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	map，mount成功</p>
<p>
	文件比较一致</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[7]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0，nbd1的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1796" name="PG数量扩展（mon与osd共存）">
	<node_order><![CDATA[16]]></node_order>
	<externalid><![CDATA[238]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）和nbd1（pool2）都创建成ext4的文件系统，分别挂载到/nbd0 和/nbd1目录下，在/nbd0 目录下写一个20G大小的文件20g.file，完成后拷贝到/nbd1目录下</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，拷贝完成后，对nbd0和nbd1做快照</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对两个文件系统/nbd0 /nbd1进行写文件操作<span style="font-size: 13.3333px;">（一个写同名文件，rate=200k，保证COW持续的时间长，一个写不同名称的文件）</span><span style="font-size: 12px;">，对裸设备nbd2（pool1），nbd3（pool2）进行裸设备随机读写</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将pool1，pool2的pg，pgp数量增加为原来的两倍，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	pg，pgp数量扩展成功</p>
<p>
	集群状态为OK，io没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	待集群状态为OK后，将pool1，pool2的pg，pgp数量增加为原来的4倍，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	pg，pgp数量扩展成功</p>
<p>
	集群状态为OK，io没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	io运行5分钟后，中断文件系统的读写，nbd2，nbd3的裸盘读写继续下发，umount文件系统nbd0，nbd1，unmap nbd0，nbd1，对nbd0，nbd1进行回滚，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	umount，unmap成功</p>
<p>
	nbd0，nbd1回滚成功</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	重新map nbd0，nbd1，mount文件系统，比较文件20g.file，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	map，mount成功</p>
<p>
	文件比较一致</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0，nbd1的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1798" name="副本数调整（mon与osd共存）">
	<node_order><![CDATA[17]]></node_order>
	<externalid><![CDATA[239]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）和nbd1（pool2）都创建成ext4的文件系统，分别挂载到/nbd0 和/nbd1目录下，在/nbd0 目录下写一个20G大小的文件20g.file，完成后拷贝到/nbd1目录下</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，拷贝完成后，对nbd0和nbd1做快照</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对两个文件系统/nbd0 /nbd1进行写文件操作<span style="font-size: 13.3333px;">（一个写同名文件，rate=200k，保证COW持续的时间长，一个写不同名称的文件）</span><span style="font-size: 12px;">，对裸设备nbd2（pool1），nbd3（pool2）进行裸设备随机读写</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，调整pool1，pool2的副本数为3，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	副本数调整成功</p>
<p>
	集群状态正常，io正常</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	运行3分钟后，调整pool1，pool2的副本数为1，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	副本数调整成功</p>
<p>
	集群状态正常，io正常</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	运行3分钟后，调整pool1，pool2的副本数为2，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	副本数调整成功</p>
<p>
	集群状态正常，io正常</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	io运行5分钟后，中断文件系统的读写，nbd2，nbd3的裸盘读写继续下发，umount文件系统nbd0，nbd1，unmap nbd0，nbd1，对nbd0，nbd1进行回滚，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	umount，unmap成功</p>
<p>
	nbd0，nbd1回滚成功</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	重新map nbd0，nbd1，mount文件系统，比较文件20g.file，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	map，mount成功</p>
<p>
	文件比较一致</p>
<p>
	nbd2，nbd3的读写不受影响，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0，nbd1的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>
</testsuite><testsuite id="1522" name="增量快照导出导入" >
<node_order><![CDATA[2]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="1589" name="关闭osd进程（mon与osd共存）">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[209]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在client端将nbd0的快照s1导出到/diff</p>
<p>
	rbd export-diff pool1/nbd0@s1 /diff</p>
<p>
	在导出过程中，将node2节点上的两个osd进程关闭，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	关闭的osd在crush tree上标记为down</p>
<p>
	io短暂归零后恢复（io归零30秒以内），没有数据一致性问题</p>
<p>
	快照导出正常</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	1分钟后将关闭的osd进程开启，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd进程启动成功，在crush tree上标记为up</p>
<p>
	io读写性能短暂降低后恢复到较高水平，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	集群恢复为OK后，在pool1中创建image，大小任意，将/diff导入到该image中</p>
<p>
	rbd import-diff /diff pool1/image</p>
<p>
	在导入过程中，将node3节点上的两个osd进程关闭，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	关闭的osd在crush tree上标记为down</p>
<p>
	io短暂归零后恢复（io归零30秒以内），没有数据一致性问题</p>
<p>
	快照导入正常</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	1分钟后将关闭的osd进程开启，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd进程启动成功，在crush tree上标记为up</p>
<p>
	io读写性能短暂降低后恢复到较高水平，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	将pool1/image 用nbd map导出，mount文件系统/image，将nbd0快照回滚，重新挂载，比较/image、/nbd0里面的文件30g.file的一致性，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	文件比较一致</p>
<p>
	其他io读写不受影响，没有数据一致性问题</p>
<p>
	集群状态OK</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1596" name="kill osd进程（mon与osd共存）">
	<node_order><![CDATA[1]]></node_order>
	<externalid><![CDATA[210]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在client端将nbd0的快照s1导出到/diff</p>
<p>
	rbd export-diff pool1/nbd0@s1 /diff</p>
<p>
	在导出过程中，将node2节点上的两个osd进程kill -9，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	kill的osd在crush tree上标记为down</p>
<p>
	io短暂归零后恢复（io归零30秒以内），没有数据一致性问题</p>
<p>
	快照导出正常</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	1分钟后将kill的osd进程开启，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd进程启动成功，在crush tree上标记为up</p>
<p>
	io读写性能短暂降低后恢复到较高水平，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	集群恢复为OK后，在pool2中创建image，大小任意，将/diff导入到该image中</p>
<p>
	rbd import-diff /diff pool2/image</p>
<p>
	在导入过程中，将node3节点上的两个osd进程kill -9，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	kill的osd在crush tree上标记为down</p>
<p>
	io短暂归零后恢复（io归零30秒以内），没有数据一致性问题</p>
<p>
	快照导入正常</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	1分钟后将kill的osd进程开启，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd进程启动成功，在crush tree上标记为up</p>
<p>
	io读写性能短暂降低后恢复到较高水平，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	将pool2/image 用nbd map导出，mount文件系统/image，将nbd0快照回滚，重新挂载，比较/image、/nbd0里面的文件30g.file的一致性，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	文件比较一致</p>
<p>
	其他io读写不受影响，没有数据一致性问题</p>
<p>
	集群状态OK</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1598" name="kill 所有进程（mon与osd共存）">
	<node_order><![CDATA[2]]></node_order>
	<externalid><![CDATA[211]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在client端将nbd0的快照s1导出到/diff</p>
<p>
	rbd export-diff pool1/nbd0@s1 /diff</p>
<p>
	在导出过程中，将node1，node2，node3上所有osd，mon进程kill -9，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	集群状态不可查看，集群不可用</p>
<p>
	io挂起</p>
<p>
	导出快照停止，最后超时失败</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	5分钟后，启动node1，node2，node3上所有的osd，mon进程，观察集群状态，io状态</p>
<p>
	在client端重新将nbd0的快照s1导出到/diff</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd，mon进程启动成功，集群状态正常</p>
<p>
	io恢复，没有数据一致性问题</p>
<p>
	快照导出正常</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	集群恢复为OK后，在pool1中创建image，大小任意，将/diff导入到该image中</p>
<p>
	rbd import-diff /diff pool1/image</p>
<p>
	在导入过程中，将node1，node2，node3节点所有osd，mon进程kill -9 ，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	集群状态不可查看，集群不可用</p>
<p>
	io挂起</p>
<p>
	导入快照停止，最后超时失败</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	5分钟后，启动node1，node2，node3上所有的osd，mon进程，观察集群状态，io状态</p>
<p>
	在client端重新导入/diff到pool1/image</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd，mon进程启动成功，集群状态正常</p>
<p>
	io恢复，没有数据一致性问题</p>
<p>
	快照导入正常</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	将pool1/image 用nbd map导出，mount文件系统/image，将nbd0快照回滚，重新挂载，比较/image、/nbd0里面的文件30g.file的一致性，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	文件比较一致</p>
<p>
	其他io读写不受影响，没有数据一致性问题</p>
<p>
	集群状态OK</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1600" name="服务器前端与Public Switch间长时间物理中断（mon与osd共存）">
	<node_order><![CDATA[3]]></node_order>
	<externalid><![CDATA[212]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在client端将nbd0的快照s1导出到/diff</p>
<p>
	rbd export-diff pool1/nbd0@s1 /diff</p>
<p>
	在导出过程中，将node1节点的public网络中断，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node1节点的osd在crush tree上全部标记为down，leader mon切换</p>
<p>
	io短暂归零后恢复（io归零30秒以内），没有数据一致性问题</p>
<p>
	快照导出成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	1分钟后恢复node1节点的public网络，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	链接恢复，node1上的osd全部标记为up，node1的mon恢复为leader mon</p>
<p>
	io性能短暂降低后恢复到较高水平，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	集群恢复为OK后，在pool1中创建image，大小任意，将/diff导入到该image中</p>
<p>
	rbd import-diff /diff pool1/image</p>
<p>
	在导入过程中，将node3节点的public网路中断，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node3节点的osd在crush tree上标记为down，集群leader mon不变</p>
<p>
	io短暂归零后恢复（io归零30秒以内），没有数据一致性问题</p>
<p>
	快照导入正常</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	1分钟后恢复node3节点的public网络，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	连接恢复，node3节点的osd全部标记为up，该节点的mon重新加入集群仲裁，最后集群状态为OK</p>
<p>
	io性能短暂降低后恢复到较高水平，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	将pool1/image 用nbd map导出，mount文件系统/image，将nbd0快照回滚，重新挂载，比较/image、/nbd0里面的文件30g.file的一致性，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	文件比较一致</p>
<p>
	其他io读写不受影响，没有数据一致性问题</p>
<p>
	集群状态OK</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1602" name="服务器后端与Cluster Switch间长时间物理中断（mon与osd共存）">
	<node_order><![CDATA[4]]></node_order>
	<externalid><![CDATA[213]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在client端将nbd0的快照s1导出到/diff</p>
<p>
	rbd export-diff pool1/nbd0@s1 /diff</p>
<p>
	在导出过程中，将node1节点的cluster网络中断，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node1节点的osd在crush tree上全部标记为down，leader mon切换</p>
<p>
	io短暂归零后恢复（io归零30秒以内），没有数据一致性问题</p>
<p>
	快照导出成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	1分钟后恢复node1节点的cluster网络，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	链接恢复，node1上的osd全部标记为up，node1的mon恢复为leader mon</p>
<p>
	io性能短暂降低后恢复到较高水平，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	集群恢复为OK后，在pool1中创建image，大小任意，将/diff导入到该image中</p>
<p>
	rbd import-diff /diff pool1/image</p>
<p>
	在导入过程中，将node3节点的cluster网路中断，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node3节点的osd在crush tree上标记为down，集群leader mon不变</p>
<p>
	io短暂归零后恢复（io归零30秒以内），没有数据一致性问题</p>
<p>
	快照导入正常</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	1分钟后恢复node3节点的cluster网络，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	连接恢复，node3节点的osd全部标记为up，该节点的mon重新加入集群仲裁，最后集群状态为OK</p>
<p>
	io性能短暂降低后恢复到较高水平，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	将pool1/image 用nbd map导出，mount文件系统/image，将nbd0快照回滚，重新挂载，比较/image、/nbd0里面的文件30g.file的一致性，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	文件比较一致</p>
<p>
	其他io读写不受影响，没有数据一致性问题</p>
<p>
	集群状态OK</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1604" name="网络全部物理中断（mon与osd共存）">
	<node_order><![CDATA[5]]></node_order>
	<externalid><![CDATA[214]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在client端将nbd0的快照s1导出到/diff</p>
<p>
	rbd export-diff pool1/nbd0@s1 /diff</p>
<p>
	在导出过程中，将node1，node2，node3节点的public，cluster网络全部中断，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	集群不可用，fio读写挂起</p>
<p>
	快照导出挂起</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	1分钟后恢复node1，node2，node3节点的public，cluster网络，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	集群状态正常，fio读写恢复，没有数据一致性问题</p>
<p>
	快照导出正常</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	集群恢复为OK后，在pool1中创建image，大小任意，将/diff导入到该image中</p>
<p>
	rbd import-diff /diff pool1/image</p>
<p>
	在导入过程中，将node1，node2，node3节点的public，cluster网络全部中断，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	集群不可用，fio读写挂起</p>
<p>
	快照导入挂起</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	1分钟后恢复node1，node2，node3节点的public，cluster网络，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	集群状态正常，fio读写恢复，没有数据一致性问题</p>
<p>
	快照导入正常</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	将pool1/image 用nbd map导出，mount文件系统/image，将nbd0快照回滚，重新挂载，比较/image、/nbd0里面的文件30g.file的一致性，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	文件比较一致</p>
<p>
	其他io读写不受影响，没有数据一致性问题</p>
<p>
	集群状态OK</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1606" name="server端重启（mon与osd共存）">
	<node_order><![CDATA[6]]></node_order>
	<externalid><![CDATA[215]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在client端将nbd0的快照s1导出到/diff</p>
<p>
	rbd export-diff pool1/nbd0@s1 /diff</p>
<p>
	在导出过程中，将node1节点reboot，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node1节点的osd在crush tree上全部标记为down，leader mon切换</p>
<p>
	io短暂归零后恢复（io归零30秒以内），没有数据一致性问题</p>
<p>
	快照导出成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	node1节点重启成功后，启动所有该节点的osd，mon进程</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node1上的osd全部标记为up，node1的mon恢复为leader mon</p>
<p>
	io性能短暂降低后恢复到较高水平，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	集群恢复为OK后，在pool1中创建image，大小任意，将/diff导入到该image中</p>
<p>
	rbd import-diff /diff pool1/image</p>
<p>
	在导入过程中，将node3节点reboot，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node3节点的osd在crush tree上标记为down，集群leader mon不变</p>
<p>
	io短暂归零后恢复（io归零30秒以内），没有数据一致性问题</p>
<p>
	快照导入正常</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	node3节点重启成功后，启动所有该节点的osd，mon进程</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node3上的osd全部标记为up，node3的mon重新加入集群仲裁</p>
<p>
	io性能短暂降低后恢复到较高水平，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	将pool1/image 用nbd map导出，mount文件系统/image，将nbd0快照回滚，重新挂载，比较/image、/nbd0里面的文件30g.file的一致性，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	文件比较一致</p>
<p>
	其他io读写不受影响，没有数据一致性问题</p>
<p>
	集群状态OK</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1608" name="server端panic（mon与osd共存）">
	<node_order><![CDATA[7]]></node_order>
	<externalid><![CDATA[216]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在client端将nbd0的快照s1导出到/diff</p>
<p>
	rbd export-diff pool1/nbd0@s1 /diff</p>
<p>
	在导出过程中，将node1节点panic，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node1节点的osd在crush tree上全部标记为down，leader mon切换</p>
<p>
	io短暂归零后恢复（io归零30秒以内），没有数据一致性问题</p>
<p>
	快照导出成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	node1节点重启成功后，启动所有该节点的osd，mon进程</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node1上的osd全部标记为up，node1的mon恢复为leader mon</p>
<p>
	io性能短暂降低后恢复到较高水平，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	集群恢复为OK后，在pool2中创建image，大小任意，将/diff导入到该image中</p>
<p>
	rbd import-diff /diff pool2/image</p>
<p>
	在导入过程中，将node3节点panic，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node3节点的osd在crush tree上标记为down，集群leader mon不变</p>
<p>
	io短暂归零后恢复（io归零30秒以内），没有数据一致性问题</p>
<p>
	快照导入正常</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	node3节点重启成功后，启动所有该节点的osd，mon进程</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node3上的osd全部标记为up，node3的mon重新加入集群仲裁</p>
<p>
	io性能短暂降低后恢复到较高水平，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	将pool2/image 用nbd map导出，mount文件系统/image，将nbd0快照回滚，重新挂载，比较/image、/nbd0里面的文件30g.file的一致性，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	文件比较一致</p>
<p>
	其他io读写不受影响，没有数据一致性问题</p>
<p>
	集群状态OK</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1610" name="逻辑踢盘（mon与osd共存）">
	<node_order><![CDATA[8]]></node_order>
	<externalid><![CDATA[217]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在client端将nbd0的快照s1导出到/diff</p>
<p>
	rbd export-diff pool1/nbd0@s1 /diff</p>
<p>
	在导出过程中，在node1节点上逻辑踢出两个SSD盘，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	被踢盘的osd在crush tree上标记为down</p>
<p>
	io短暂归零后恢复（io归零30秒以内），没有数据一致性问题</p>
<p>
	快照导出正常</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	1分钟后将两个SSD盘重新加载，重新启动osd进程，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd进程启动成功，在crush tree上标记为up</p>
<p>
	io读写性能短暂降低后恢复到较高水平，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	集群恢复为OK后，在pool2中创建image，大小任意，将/diff导入到该image中</p>
<p>
	rbd import-diff /diff pool2/image</p>
<p>
	在导入过程中，将node3节点上逻辑踢出两个SSD，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	被踢盘的osd在crush tree上标记为down</p>
<p>
	io短暂归零后恢复（io归零30秒以内），没有数据一致性问题</p>
<p>
	快照导入正常</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	1分钟后将两个SSD盘重新加载，重新启动osd进程，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd进程启动成功，在crush tree上标记为up</p>
<p>
	io读写性能短暂降低后恢复到较高水平，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	将pool2/image 用nbd map导出，mount文件系统/image，将nbd0快照回滚，重新挂载，比较/image、/nbd0里面的文件30g.file的一致性，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	文件比较一致</p>
<p>
	其他io读写不受影响，没有数据一致性问题</p>
<p>
	集群状态OK</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1811" name="Client端与Public Switch间长时间物理中断（mon与osd共存）">
	<node_order><![CDATA[9]]></node_order>
	<externalid><![CDATA[240]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在client端将nbd0的快照s1导出到/diff</p>
<p>
	rbd export-diff pool1/nbd0@s1 /diff</p>
<p>
	在导出过程中，将client节点的public网络中断，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	client端不能查看集群状态</p>
<p>
	client端上的io读写挂起</p>
<p>
	client端的快照导出挂起</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	1分钟后，恢复client端的public网络，查看集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	client端可以查看集群状态</p>
<p>
	client端的io读写继续下发</p>
<p>
	client端的快照导出继续，最后成功完成</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	在pool2中创建image，大小任意，将/diff导入到该image中</p>
<p>
	rbd import-diff /diff pool2/image</p>
<p>
	在导入过程中，将client节点的public网路中断，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	client端不能查看集群状态</p>
<p>
	client端上的io读写挂起</p>
<p>
	client端的快照导出挂起</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	1分钟后，恢复client端的public网络，查看集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	client端可以查看集群状态</p>
<p>
	client端的io读写继续下发</p>
<p>
	client端的快照导入继续，最后成功完成</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	将pool2/image 用nbd map导出，mount文件系统/image，将nbd0快照回滚，重新挂载，比较/image、/nbd0里面的文件30g.file的一致性，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	文件比较一致</p>
<p>
	其他io读写不受影响，没有数据一致性问题</p>
<p>
	集群状态OK</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1818" name="osd脱离、加入集群（mon与osd共存）">
	<node_order><![CDATA[10]]></node_order>
	<externalid><![CDATA[241]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="margin: 0px; padding: 0px; font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="margin: 0px; padding: 0px; font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在client端将nbd0的快照s1导出到/diff</p>
<p>
	rbd export-diff pool1/nbd0@s1 /diff</p>
<p>
	在导出过程中，将node1节点的两个osd进程out出集群，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd out过程正常，有pg的迁移，最后集群为OK状态</p>
<p>
	io读写没有数据一致性问题</p>
<p>
	快照导出正常</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	在pool2中创建image，大小任意，将/diff导入到该image中</p>
<p>
	rbd import-diff /diff pool2/image</p>
<p>
	在导入过程中，将node2节点的两个osd进程out出集群，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd out过程正常，有pg的迁移，最后集群为OK状态</p>
<p>
	io读写没有数据一致性问题</p>
<p>
	快照导入正常</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	将pool2/image 用nbd map导出，mount文件系统/image，将nbd0快照回滚，重新挂载，比较/image、/nbd0里面的文件30g.file的一致性，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	文件比较一致</p>
<p>
	其他io读写不受影响，没有数据一致性问题</p>
<p>
	集群状态OK</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	将node1，node2 状态为out的osd，重新加入集群</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd加入集群成功，pg迁移，最后集群状态为OK</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1820" name="删除osd（mon与osd共存）">
	<node_order><![CDATA[11]]></node_order>
	<externalid><![CDATA[242]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="margin: 0px; padding: 0px; font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="margin: 0px; padding: 0px; font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在client端将nbd0的快照s1导出到/diff</p>
<p>
	rbd export-diff pool1/nbd0@s1 /diff</p>
<p>
	在导出过程中，使用脚本删除node3上的一个osd进程，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除osd成功，有pg的迁移，最终集群状态为OK</p>
<p>
	io读写正常，没有数据一致性问题</p>
<p>
	快照导出成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	集群恢复为OK后，在pool1中创建image，大小任意，将/diff导入到该image中</p>
<p>
	rbd import-diff /diff pool1/image</p>
<p>
	在导入过程中，使用脚本删除node1上的一个osd进程，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除osd成功，有pg的迁移，最终集群状态为OK</p>
<p>
	io读写正常，没有数据一致性问题</p>
<p>
	快照导入成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	将pool1/image 用nbd map导出，mount文件系统/image，将nbd0快照回滚，重新挂载，比较/image、/nbd0里面的文件30g.file的一致性，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	文件比较一致</p>
<p>
	其他io读写不受影响，没有数据一致性问题</p>
<p>
	集群状态OK</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1822" name="添加osd（mon与osd共存）">
	<node_order><![CDATA[12]]></node_order>
	<externalid><![CDATA[243]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="margin: 0px; padding: 0px; font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="margin: 0px; padding: 0px; font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在client端将nbd0的快照s1导出到/diff</p>
<p>
	rbd export-diff pool1/nbd0@s1 /diff</p>
<p>
	在导出过程中，使用脚本在node3上添加一个osd进程，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	添加osd成功，有pg的迁移，最终集群状态为OK</p>
<p>
	io读写正常，没有数据一致性问题</p>
<p>
	快照导出成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	集群恢复为OK后，在pool1中创建image，大小任意，将/diff导入到该image中</p>
<p>
	rbd import-diff /diff pool1/image</p>
<p>
	在导入过程中，使用脚本在node1上添加一个osd进程，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	添加osd成功，有pg的迁移，最终集群状态为OK</p>
<p>
	io读写正常，没有数据一致性问题</p>
<p>
	快照导入成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	将pool1/image 用nbd map导出，mount文件系统/image，将nbd0快照回滚，重新挂载，比较/image、/nbd0里面的文件30g.file的一致性，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	文件比较一致</p>
<p>
	其他io读写不受影响，没有数据一致性问题</p>
<p>
	集群状态OK</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1824" name="暂停集群（mon与osd共存）">
	<node_order><![CDATA[13]]></node_order>
	<externalid><![CDATA[244]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="margin: 0px; padding: 0px; font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="margin: 0px; padding: 0px; font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在client端将nbd0的快照s1导出到/diff</p>
<p>
	rbd export-diff pool1/nbd0@s1 /diff</p>
<p>
	在导出过程中，暂停集群，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	集群暂停后，集群不能提供读写服务</p>
<p>
	io挂起</p>
<p>
	快照导出过程挂起</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	5分钟后，取消集群暂停，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	取消暂停后，集群可以提供读写服务</p>
<p>
	io继续下发，没有数据一致性问题</p>
<p>
	快照导出成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	在pool1中创建image，大小任意，将/diff导入到该image中</p>
<p>
	rbd import-diff /diff pool1/image</p>
<p>
	在导入过程中，暂停集群，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	集群暂停后，集群不能提供读写服务</p>
<p>
	io挂起</p>
<p>
	快照导入过程挂起</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	5分钟后，取消集群暂停，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	取消暂停后，集群可以提供读写服务</p>
<p>
	io继续下发，没有数据一致性问题</p>
<p>
	快照导入成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	将pool1/image 用nbd map导出，mount文件系统/image，将nbd0快照回滚，重新挂载，比较/image、/nbd0里面的文件30g.file的一致性，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	文件比较一致</p>
<p>
	其他io读写不受影响，没有数据一致性问题</p>
<p>
	集群状态OK</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1826" name="server端掉电（mon与osd共存）">
	<node_order><![CDATA[14]]></node_order>
	<externalid><![CDATA[245]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="margin: 0px; padding: 0px; font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="margin: 0px; padding: 0px; font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在client端将nbd0的快照s1导出到/diff</p>
<p>
	rbd export-diff pool1/nbd0@s1 /diff</p>
<p>
	在导出过程中，将node1，node2掉电，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	掉电后，集群不能提供读写服务</p>
<p>
	io挂起</p>
<p>
	快照导出过程挂起</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	将node1，node2上电，重启该节点上的osd，mon进程，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	启动osd，mon正常，集群状态ok</p>
<p>
	io继续下发，无数据一致性问题</p>
<p>
	快照导出成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	在pool2中创建image，大小任意，将/diff导入到该image中</p>
<p>
	rbd import-diff /diff pool2/image</p>
<p>
	在导入过程中，将node2，node3掉电，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	掉电后，集群不能提供读写服务</p>
<p>
	io挂起</p>
<p>
	快照导入过程挂起</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	将node2，node3上电，重启该节点上的osd，mon进程，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	启动osd，mon正常，集群状态ok</p>
<p>
	io继续下发，无数据一致性问题</p>
<p>
	快照导入成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	将pool2/image 用nbd map导出，mount文件系统/image，将nbd0快照回滚，重新挂载，比较/image、/nbd0里面的文件30g.file的一致性，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	文件比较一致</p>
<p>
	其他io读写不受影响，没有数据一致性问题</p>
<p>
	集群状态OK</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1828" name="server端关机/开机（mon与osd共存）">
	<node_order><![CDATA[15]]></node_order>
	<externalid><![CDATA[246]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="margin: 0px; padding: 0px; font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="margin: 0px; padding: 0px; font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在client端将nbd0的快照s1导出到/diff</p>
<p>
	rbd export-diff pool1/nbd0@s1 /diff</p>
<p>
	在导出过程中，将node1，node3关机，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	关机后，集群不能提供读写服务</p>
<p>
	io挂起</p>
<p>
	快照导出过程挂起</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	将node1，node3开机，重启该节点上的osd，mon进程，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	启动osd，mon正常，集群状态ok</p>
<p>
	io继续下发，无数据一致性问题</p>
<p>
	快照导出成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	在pool2中创建image，大小任意，将/diff导入到该image中</p>
<p>
	rbd import-diff /diff pool2/image</p>
<p>
	在导入过程中，将node2，node3关机，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	关机后，集群不能提供读写服务</p>
<p>
	io挂起</p>
<p>
	快照导入过程挂起</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	将node2，node3开机，重启该节点上的osd，mon进程，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	启动osd，mon正常，集群状态ok</p>
<p>
	io继续下发，无数据一致性问题</p>
<p>
	快照导入成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	将pool2/image 用nbd map导出，mount文件系统/image，将nbd0快照回滚，重新挂载，比较/image、/nbd0里面的文件30g.file的一致性，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	文件比较一致</p>
<p>
	其他io读写不受影响，没有数据一致性问题</p>
<p>
	集群状态OK</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1830" name="server端非NTP同步（mon与osd共存）">
	<node_order><![CDATA[16]]></node_order>
	<externalid><![CDATA[247]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="margin: 0px; padding: 0px; font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="margin: 0px; padding: 0px; font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在client端将nbd0的快照s1导出到/diff</p>
<p>
	rbd export-diff pool1/nbd0@s1 /diff</p>
<p>
	在导出过程中，取消node1节点的NTP服务，调整node1节点的时间，比集群时间快5分钟，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node1节点的osd被标记为down，leader mon切换</p>
<p>
	io短暂归零后恢复，没有数据一致性问题</p>
<p>
	快照导出正常</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	5分钟后，启动node1的NTP服务，调整时间，与集群时间相差0.05秒以内，重启node1节点的所有osd、mon进程，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd，mon启动正常，集群状态为OK</p>
<p>
	io读写正常，无数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	待集群状态为OK后，在pool2中创建image，大小任意，将/diff导入到该image中</p>
<p>
	rbd import-diff /diff pool2/image</p>
<p>
	在导入过程中，取消node2节点的NTP服务，调整node2节点的时间，比集群时间慢5分钟，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	集群有告警，时钟偏移</p>
<p>
	io读写正常，没有数据一致性问题</p>
<p>
	快照导入正常</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	5分钟后，启动node2的NTP服务，调整时间，与集群时间相差0.05秒以内，重启node2节点的所有osd、mon进程，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd，mon启动正常，集群状态为OK</p>
<p>
	io读写正常，无数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	将pool2/image 用nbd map导出，mount文件系统/image，将nbd0快照回滚，重新挂载，比较/image、/nbd0里面的文件30g.file的一致性，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	文件比较一致</p>
<p>
	其他io读写不受影响，没有数据一致性问题</p>
<p>
	集群状态OK</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1832" name="PG数量扩展（mon与osd共存）">
	<node_order><![CDATA[17]]></node_order>
	<externalid><![CDATA[248]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="margin: 0px; padding: 0px; font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="margin: 0px; padding: 0px; font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在client端将nbd0的快照s1导出到/diff</p>
<p>
	rbd export-diff pool1/nbd0@s1 /diff</p>
<p>
	在导出过程中，将pool1，pool2的pg数量扩展为原来的两倍，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	pg数量增加，有数据迁移，最后集群状态为OK</p>
<p>
	io读写正常，没有数据一致性问题</p>
<p>
	快照导出成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	待集群状态为OK后，在pool2中创建image，大小任意，将/diff导入到该image中</p>
<p>
	rbd import-diff /diff pool2/image</p>
<p>
	在导入过程中，将pool1，pool2的pg数量扩展为原来的4倍，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	pg数量增加，有数据迁移，最后集群状态为OK</p>
<p>
	io读写正常，没有数据一致性问题</p>
<p>
	快照导入成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	将pool2/image 用nbd map导出，mount文件系统/image，将nbd0快照回滚，重新挂载，比较/image、/nbd0里面的文件30g.file的一致性，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	文件比较一致</p>
<p>
	其他io读写不受影响，没有数据一致性问题</p>
<p>
	集群状态OK</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1834" name="副本数调整（mon与osd共存）">
	<node_order><![CDATA[18]]></node_order>
	<externalid><![CDATA[249]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="margin: 0px; padding: 0px; font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="margin: 0px; padding: 0px; font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在client端将nbd0的快照s1导出到/diff</p>
<p>
	rbd export-diff pool1/nbd0@s1 /diff</p>
<p>
	在导出过程中，将pool1，pool2的副本数调整到3，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	有pg的重新配对，数据迁移，最后集群状态为OK</p>
<p>
	io读写无问题，没有数据一致性问题</p>
<p>
	快照导出成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	待集群状态为OK后，在pool1中创建image，大小任意，将/diff导入到该image中</p>
<p>
	rbd import-diff /diff pool1/image</p>
<p>
	在导入过程中，将pool1，pool2的副本数量调整到2，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	有pg的重新配对，最后集群状态为OK</p>
<p>
	io读写无问题，没有数据一致性问题</p>
<p>
	快照导入成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	将pool1/image 用nbd map导出，mount文件系统/image，将nbd0快照回滚，重新挂载，比较/image、/nbd0里面的文件30g.file的一致性，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	文件比较一致</p>
<p>
	其他io读写不受影响，没有数据一致性问题</p>
<p>
	集群状态OK</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>
</testsuite><testsuite id="1523" name="快照克隆" >
<node_order><![CDATA[3]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="1683" name="关闭osd进程（mon与osd共存）">
	<node_order><![CDATA[1000]]></node_order>
	<externalid><![CDATA[222]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将快照pool1/nbd0@s1分别clone到pool1和pool2中：</p>
<p>
	rbd snap protest pool1/nbd0@s1</p>
<p>
	rbd clone pool1/nbd0@s1 pool1/nbd0s1c1</p>
<p>
	rbd clone pool1/nbd0@s1 pool2/nbd0s1c2</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	创建clone成功，在pool1和pool2中可以查看到clone后的image</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	flatten pool1/nbd0s1c1,pool2/nbd0s1c2:</p>
<p>
	rbd flatten pool1/nbd0s1c1</p>
<p>
	rbd flatten pool2/nbd0s1c2</p>
<p>
	在flatten过程中，将node1上的三个osd进程关闭</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	rbd flatten过程正常</p>
<p>
	关闭进程后，io短暂归零后恢复，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	1分钟后，将关闭的osd进程开启，查看osd状态，flatten状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd启动成功，在crush tree上标记为up，集群最后恢复为OK</p>
<p>
	flatten过程正常，最后成功</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	将pool1/nbd0s1c1, pool2/nbd0s1c2用nbd导出，挂载到文件系统/root/c1 , /root/c2, 比较两个文件系统里面30g.file文件的一致性</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	nbd导出成功，挂载文件系统成功</p>
<p>
	文件比较一致</p>
<p>
	io读写正常，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1689" name="kill osd进程（mon与osd共存）">
	<node_order><![CDATA[1001]]></node_order>
	<externalid><![CDATA[223]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将快照pool1/nbd0@s1分别clone到pool1和pool2中：</p>
<p>
	rbd snap protest pool1/nbd0@s1</p>
<p>
	rbd clone pool1/nbd0@s1 pool1/nbd0s1c1</p>
<p>
	rbd clone pool1/nbd0@s1 pool2/nbd0s1c2</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	创建clone成功，在pool1和pool2中可以查看到clone后的image</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	flatten pool1/nbd0s1c1,pool2/nbd0s1c2:</p>
<p>
	rbd flatten pool1/nbd0s1c1</p>
<p>
	rbd flatten pool2/nbd0s1c2</p>
<p>
	在flatten过程中，将node2上的三个osd进程kill -9</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	rbd flatten过程正常</p>
<p>
	进程kill -9后，io短暂归零后恢复，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	1分钟后，将关闭的osd进程开启，查看osd状态，flatten状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd启动成功，在crush tree上标记为up，集群最后恢复为OK</p>
<p>
	flatten过程正常，最后成功</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	将pool1/nbd0s1c1, pool2/nbd0s1c2用nbd导出，挂载到文件系统/root/c1 , /root/c2, 比较两个文件系统里面30g.file文件的一致性</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	nbd导出成功，挂载文件系统成功</p>
<p>
	文件比较一致</p>
<p>
	io读写正常，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1691" name="kill 所有进程（mon与osd共存）">
	<node_order><![CDATA[1002]]></node_order>
	<externalid><![CDATA[224]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将快照pool1/nbd0@s1分别clone到pool1和pool2中：</p>
<p>
	rbd snap protest pool1/nbd0@s1</p>
<p>
	rbd clone pool1/nbd0@s1 pool1/nbd0s1c1</p>
<p>
	rbd clone pool1/nbd0@s1 pool2/nbd0s1c2</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	创建clone成功，在pool1和pool2中可以查看到clone后的image</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	flatten pool1/nbd0s1c1,pool2/nbd0s1c2:</p>
<p>
	rbd flatten pool1/nbd0s1c1</p>
<p>
	rbd flatten pool2/nbd0s1c2</p>
<p>
	在flatten过程中，将node1，node2，node3上的所有osd、mon进程kill -9</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	io读写挂起，集群不可用，无法查看状态</p>
<p>
	flatten过程挂起</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	5分钟后，启动所有node1，node2，node3上的osd、mon进程，观察集群状态，flatten状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd，mon进程启动成功，集群状态正常</p>
<p>
	fio读写恢复，没有数据一致性问题</p>
<p>
	flatten过程可以重新继续，最后成功完成</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	将pool1/nbd0s1c1, pool2/nbd0s1c2用nbd导出，挂载到文件系统/root/c1 , /root/c2, 比较两个文件系统里面30g.file文件的一致性</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	nbd导出成功，挂载文件系统成功</p>
<p>
	文件比较一致</p>
<p>
	io读写正常，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1693" name="服务器前端与Public Switch间长时间物理中断（mon与osd共存）">
	<node_order><![CDATA[1003]]></node_order>
	<externalid><![CDATA[225]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将快照pool1/nbd0@s1分别clone到pool1和pool2中：</p>
<p>
	rbd snap protest pool1/nbd0@s1</p>
<p>
	rbd clone pool1/nbd0@s1 pool1/nbd0s1c1</p>
<p>
	rbd clone pool1/nbd0@s1 pool2/nbd0s1c2</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	创建clone成功，在pool1和pool2中可以查看到clone后的image</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	flatten pool1/nbd0s1c1,pool2/nbd0s1c2:</p>
<p>
	rbd flatten pool1/nbd0s1c1</p>
<p>
	rbd flatten pool2/nbd0s1c2</p>
<p>
	在flatten过程中，将node1的public网络长时间中断</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	rbd flatten过程正常</p>
<p>
	node1的public网络中断后，io短暂归零后恢复，没有数据一致性问题</p>
<p>
	node1上的osd全部标记为down，leader mon切换</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	1分钟后，将node1节点的public网络恢复，查看osd状态，flatten状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node1的所有osd在crush tree上标记为up，node1的mon重新变为leader mon。集群最后恢复为OK</p>
<p>
	flatten过程正常，最后成功</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	将pool1/nbd0s1c1, pool2/nbd0s1c2用nbd导出，挂载到文件系统/root/c1 , /root/c2, 比较两个文件系统里面30g.file文件的一致性</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	nbd导出成功，挂载文件系统成功</p>
<p>
	文件比较一致</p>
<p>
	io读写正常，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1695" name="服务器后端与Cluster Switch间长时间物理中断（mon与osd共存）">
	<node_order><![CDATA[1004]]></node_order>
	<externalid><![CDATA[226]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将快照pool1/nbd0@s1分别clone到pool1和pool2中：</p>
<p>
	rbd snap protest pool1/nbd0@s1</p>
<p>
	rbd clone pool1/nbd0@s1 pool1/nbd0s1c1</p>
<p>
	rbd clone pool1/nbd0@s1 pool2/nbd0s1c2</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	创建clone成功，在pool1和pool2中可以查看到clone后的image</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	flatten pool1/nbd0s1c1,pool2/nbd0s1c2:</p>
<p>
	rbd flatten pool1/nbd0s1c1</p>
<p>
	rbd flatten pool2/nbd0s1c2</p>
<p>
	在flatten过程中，将node2的cluster网络长时间中断</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	rbd flatten过程正常</p>
<p>
	node2的cluster网络中断后，io短暂归零后恢复，没有数据一致性问题</p>
<p>
	node2上的osd全部标记为down，leader mon不切换</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	1分钟后，将node2节点的cluster网络恢复，查看osd状态，flatten状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node2的所有osd在crush tree上标记为up，node2的mon重新加入集群仲裁。集群最后恢复为OK</p>
<p>
	flatten过程正常，最后成功</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	将pool1/nbd0s1c1, pool2/nbd0s1c2用nbd导出，挂载到文件系统/root/c1 , /root/c2, 比较两个文件系统里面30g.file文件的一致性</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	nbd导出成功，挂载文件系统成功</p>
<p>
	文件比较一致</p>
<p>
	io读写正常，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1697" name="网络全部物理中断（mon与osd共存）">
	<node_order><![CDATA[1005]]></node_order>
	<externalid><![CDATA[227]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将快照pool1/nbd0@s1分别clone到pool1和pool2中：</p>
<p>
	rbd snap protest pool1/nbd0@s1</p>
<p>
	rbd clone pool1/nbd0@s1 pool1/nbd0s1c1</p>
<p>
	rbd clone pool1/nbd0@s1 pool2/nbd0s1c2</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	创建clone成功，在pool1和pool2中可以查看到clone后的image</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	flatten pool1/nbd0s1c1,pool2/nbd0s1c2:</p>
<p>
	rbd flatten pool1/nbd0s1c1</p>
<p>
	rbd flatten pool2/nbd0s1c2</p>
<p>
	在flatten过程中，将node1，node2，node3的public、cluster网络长时间中断</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	集群不可用，不能查看状态</p>
<p>
	fio读写挂起</p>
<p>
	flatten过程挂起</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	1分钟后，恢复node1，node2，node3的public，cluster网络，查看集群状态，io状态，flatten状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	网络恢复后，集群恢复为OK状态</p>
<p>
	io读写继续下发，没有数据一致性问题</p>
<p>
	flatten过程继续，最后成功完成</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	将pool1/nbd0s1c1, pool2/nbd0s1c2用nbd导出，挂载到文件系统/root/c1 , /root/c2, 比较两个文件系统里面30g.file文件的一致性</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	nbd导出成功，挂载文件系统成功</p>
<p>
	文件比较一致</p>
<p>
	io读写正常，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1699" name="server端重启（mon与osd共存）">
	<node_order><![CDATA[1006]]></node_order>
	<externalid><![CDATA[228]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将快照pool1/nbd0@s1分别clone到pool1和pool2中：</p>
<p>
	rbd snap protest pool1/nbd0@s1</p>
<p>
	rbd clone pool1/nbd0@s1 pool1/nbd0s1c1</p>
<p>
	rbd clone pool1/nbd0@s1 pool2/nbd0s1c2</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	创建clone成功，在pool1和pool2中可以查看到clone后的image</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	flatten pool1/nbd0s1c1,pool2/nbd0s1c2:</p>
<p>
	rbd flatten pool1/nbd0s1c1</p>
<p>
	rbd flatten pool2/nbd0s1c2</p>
<p>
	在flatten过程中，将node1 reboot重启</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	rbd flatten过程正常</p>
<p>
	node1 reboot后，io短暂归零后恢复，没有数据一致性问题</p>
<p>
	node1上的osd全部标记为down，leader mon切换</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	node1启动成功后，将osd、mon进程开启，查看osd状态，flatten状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node1的所有osd在crush tree上标记为up，node1的mon重新变为leader mon。集群最后恢复为OK</p>
<p>
	flatten过程正常，最后成功</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	将pool1/nbd0s1c1, pool2/nbd0s1c2用nbd导出，挂载到文件系统/root/c1 , /root/c2, 比较两个文件系统里面30g.file文件的一致性</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	nbd导出成功，挂载文件系统成功</p>
<p>
	文件比较一致</p>
<p>
	io读写正常，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1701" name="server端panic（mon与osd共存）">
	<node_order><![CDATA[1007]]></node_order>
	<externalid><![CDATA[229]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件，（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将快照pool1/nbd0@s1分别clone到pool1和pool2中：</p>
<p>
	rbd snap protest pool1/nbd0@s1</p>
<p>
	rbd clone pool1/nbd0@s1 pool1/nbd0s1c1</p>
<p>
	rbd clone pool1/nbd0@s1 pool2/nbd0s1c2</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	创建clone成功，在pool1和pool2中可以查看到clone后的image</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	flatten pool1/nbd0s1c1,pool2/nbd0s1c2:</p>
<p>
	rbd flatten pool1/nbd0s1c1</p>
<p>
	rbd flatten pool2/nbd0s1c2</p>
<p>
	在flatten过程中，将node3 panic重启</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	rbd flatten过程正常</p>
<p>
	node3 panic后，io短暂归零后恢复，没有数据一致性问题</p>
<p>
	node3上的osd全部标记为down，leader mon不切换</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	node3启动成功后，将osd、mon进程开启，查看osd状态，flatten状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	node3所有osd在crush tree上标记为up，node3的mon重新加入集群仲裁。集群最后恢复为OK</p>
<p>
	flatten过程正常，最后成功</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	将pool1/nbd0s1c1, pool2/nbd0s1c2用nbd导出，挂载到文件系统/root/c1 , /root/c2, 比较两个文件系统里面30g.file文件的一致性</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	nbd导出成功，挂载文件系统成功</p>
<p>
	文件比较一致</p>
<p>
	io读写正常，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1703" name="逻辑踢盘（mon与osd共存）">
	<node_order><![CDATA[1008]]></node_order>
	<externalid><![CDATA[230]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将快照pool1/nbd0@s1分别clone到pool1和pool2中：</p>
<p>
	rbd snap protest pool1/nbd0@s1</p>
<p>
	rbd clone pool1/nbd0@s1 pool1/nbd0s1c1</p>
<p>
	rbd clone pool1/nbd0@s1 pool2/nbd0s1c2</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	创建clone成功，在pool1和pool2中可以查看到clone后的image</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	flatten pool1/nbd0s1c1,pool2/nbd0s1c2:</p>
<p>
	rbd flatten pool1/nbd0s1c1</p>
<p>
	rbd flatten pool2/nbd0s1c2</p>
<p>
	在flatten过程中，将node2节点上逻辑踢出两个SSD，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	踢出SSD的osd被标记为down</p>
<p>
	踢出SSD时，io短暂归零后恢复（30秒内），没有数据一致性问题</p>
<p>
	flatten过程正常，最后成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	1分钟后，将踢出的SSD重新加载回来，启动osd进程，观察io状态，集群状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	重新加载成功，启动osd成功，在crush tree上重新标记为up，集群状态最后为OK</p>
<p>
	io读写没有问题，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	将pool1/nbd0s1c1, pool2/nbd0s1c2用nbd导出，挂载到文件系统/root/c1 , /root/c2, 比较两个文件系统里面30g.file文件的一致性</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	nbd导出成功，挂载文件系统成功</p>
<p>
	文件比较一致</p>
<p>
	io读写正常，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1891" name="osd脱离、加入集群（mon与osd共存）">
	<node_order><![CDATA[1009]]></node_order>
	<externalid><![CDATA[250]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将快照pool1/nbd0@s1分别clone到pool1和pool2中：</p>
<p>
	rbd snap protest pool1/nbd0@s1</p>
<p>
	rbd clone pool1/nbd0@s1 pool1/nbd0s1c1</p>
<p>
	rbd clone pool1/nbd0@s1 pool2/nbd0s1c2</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	创建clone成功，在pool1和pool2中可以查看到clone后的image</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	flatten pool1/nbd0s1c1,pool2/nbd0s1c2:</p>
<p>
	rbd flatten pool1/nbd0s1c1</p>
<p>
	rbd flatten pool2/nbd0s1c2</p>
<p>
	在flatten过程中，将node2节点的两个osd out出集群，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	out时，有pg的迁移，最后集群恢复为OK</p>
<p>
	io性能短暂降低，没有数据一致性问题</p>
<p>
	flatten过程正常，最后成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	将node2上的osd重新加入集群</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd加入集群成功，有pg的迁移</p>
<p>
	io读写正常，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	将pool1/nbd0s1c1, pool2/nbd0s1c2用nbd导出，挂载到文件系统/root/c1 , /root/c2, 比较两个文件系统里面30g.file文件的一致性</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	nbd导出成功，挂载文件系统成功</p>
<p>
	文件比较一致</p>
<p>
	io读写正常，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1893" name="删除osd（mon与osd共存）">
	<node_order><![CDATA[1010]]></node_order>
	<externalid><![CDATA[251]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将快照pool1/nbd0@s1分别clone到pool1和pool2中：</p>
<p>
	rbd snap protest pool1/nbd0@s1</p>
<p>
	rbd clone pool1/nbd0@s1 pool1/nbd0s1c1</p>
<p>
	rbd clone pool1/nbd0@s1 pool2/nbd0s1c2</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	创建clone成功，在pool1和pool2中可以查看到clone后的image</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	flatten pool1/nbd0s1c1,pool2/nbd0s1c2:</p>
<p>
	rbd flatten pool1/nbd0s1c1</p>
<p>
	rbd flatten pool2/nbd0s1c2</p>
<p>
	在flatten过程中，使用脚本将node1节点一个osd删除，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd删除成功，集群状态为OK</p>
<p>
	io读写正常，无数据一致性问题</p>
<p>
	flatten过程成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	将pool1/nbd0s1c1, pool2/nbd0s1c2用nbd导出，挂载到文件系统/root/c1 , /root/c2, 比较两个文件系统里面30g.file文件的一致性</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	nbd导出成功，挂载文件系统成功</p>
<p>
	文件比较一致</p>
<p>
	io读写正常，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1895" name="添加osd（mon与osd共存）">
	<node_order><![CDATA[1011]]></node_order>
	<externalid><![CDATA[252]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将快照pool1/nbd0@s1分别clone到pool1和pool2中：</p>
<p>
	rbd snap protest pool1/nbd0@s1</p>
<p>
	rbd clone pool1/nbd0@s1 pool1/nbd0s1c1</p>
<p>
	rbd clone pool1/nbd0@s1 pool2/nbd0s1c2</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	创建clone成功，在pool1和pool2中可以查看到clone后的image</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	flatten pool1/nbd0s1c1,pool2/nbd0s1c2:</p>
<p>
	rbd flatten pool1/nbd0s1c1</p>
<p>
	rbd flatten pool2/nbd0s1c2</p>
<p>
	在flatten过程中，使用脚本在node1节点添加一个osd，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd添加成功，集群状态为OK</p>
<p>
	io读写正常，无数据一致性问题</p>
<p>
	flatten过程成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	将pool1/nbd0s1c1, pool2/nbd0s1c2用nbd导出，挂载到文件系统/root/c1 , /root/c2, 比较两个文件系统里面30g.file文件的一致性</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	nbd导出成功，挂载文件系统成功</p>
<p>
	文件比较一致</p>
<p>
	io读写正常，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1897" name="暂停集群（mon与osd共存）">
	<node_order><![CDATA[1012]]></node_order>
	<externalid><![CDATA[253]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将快照pool1/nbd0@s1分别clone到pool1和pool2中：</p>
<p>
	rbd snap protest pool1/nbd0@s1</p>
<p>
	rbd clone pool1/nbd0@s1 pool1/nbd0s1c1</p>
<p>
	rbd clone pool1/nbd0@s1 pool2/nbd0s1c2</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	创建clone成功，在pool1和pool2中可以查看到clone后的image</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	flatten pool1/nbd0s1c1,pool2/nbd0s1c2:</p>
<p>
	rbd flatten pool1/nbd0s1c1</p>
<p>
	rbd flatten pool2/nbd0s1c2</p>
<p>
	在flatten过程中，暂停集群，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	集群暂停，不能提供读写服务</p>
<p>
	io读写挂起</p>
<p>
	flatten过程挂起</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	5分钟后，取消暂停集群，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	集群可以提供读写服务</p>
<p>
	io读写恢复</p>
<p>
	flatten过程成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	将pool1/nbd0s1c1, pool2/nbd0s1c2用nbd导出，挂载到文件系统/root/c1 , /root/c2, 比较两个文件系统里面30g.file文件的一致性</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	nbd导出成功，挂载文件系统成功</p>
<p>
	文件比较一致</p>
<p>
	io读写正常，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1899" name="server端掉电（mon与osd共存）">
	<node_order><![CDATA[1013]]></node_order>
	<externalid><![CDATA[254]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将快照pool1/nbd0@s1分别clone到pool1和pool2中：</p>
<p>
	rbd snap protest pool1/nbd0@s1</p>
<p>
	rbd clone pool1/nbd0@s1 pool1/nbd0s1c1</p>
<p>
	rbd clone pool1/nbd0@s1 pool2/nbd0s1c2</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	创建clone成功，在pool1和pool2中可以查看到clone后的image</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	flatten pool1/nbd0s1c1,pool2/nbd0s1c2:</p>
<p>
	rbd flatten pool1/nbd0s1c1</p>
<p>
	rbd flatten pool2/nbd0s1c2</p>
<p>
	在flatten过程中，将node3，node1掉电，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	集群不可用</p>
<p>
	io读写挂起</p>
<p>
	flatten过程挂起</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	node1，node3上电，重启所有osd，mon进程，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd，mon启动成功，集群状态为OK</p>
<p>
	io读写恢复，无一致性问题</p>
<p>
	flatten过程成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	将pool1/nbd0s1c1, pool2/nbd0s1c2用nbd导出，挂载到文件系统/root/c1 , /root/c2, 比较两个文件系统里面30g.file文件的一致性</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	nbd导出成功，挂载文件系统成功</p>
<p>
	文件比较一致</p>
<p>
	io读写正常，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1901" name="server端关机/开机（mon与osd共存）">
	<node_order><![CDATA[1014]]></node_order>
	<externalid><![CDATA[255]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将快照pool1/nbd0@s1分别clone到pool1和pool2中：</p>
<p>
	rbd snap protest pool1/nbd0@s1</p>
<p>
	rbd clone pool1/nbd0@s1 pool1/nbd0s1c1</p>
<p>
	rbd clone pool1/nbd0@s1 pool2/nbd0s1c2</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	创建clone成功，在pool1和pool2中可以查看到clone后的image</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	flatten pool1/nbd0s1c1,pool2/nbd0s1c2:</p>
<p>
	rbd flatten pool1/nbd0s1c1</p>
<p>
	rbd flatten pool2/nbd0s1c2</p>
<p>
	在flatten过程中，将node3，node2关机，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	集群不可用</p>
<p>
	io读写挂起</p>
<p>
	flatten过程挂起</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	node2，node3开机，重启所有osd，mon进程，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	osd，mon启动成功，集群状态为OK</p>
<p>
	io读写恢复，无一致性问题</p>
<p>
	flatten过程成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	将pool1/nbd0s1c1, pool2/nbd0s1c2用nbd导出，挂载到文件系统/root/c1 , /root/c2, 比较两个文件系统里面30g.file文件的一致性</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	nbd导出成功，挂载文件系统成功</p>
<p>
	文件比较一致</p>
<p>
	io读写正常，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1903" name="server端非NTP同步（mon与osd共存）">
	<node_order><![CDATA[1015]]></node_order>
	<externalid><![CDATA[256]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将快照pool1/nbd0@s1分别clone到pool1和pool2中：</p>
<p>
	rbd snap protest pool1/nbd0@s1</p>
<p>
	rbd clone pool1/nbd0@s1 pool1/nbd0s1c1</p>
<p>
	rbd clone pool1/nbd0@s1 pool2/nbd0s1c2</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	创建clone成功，在pool1和pool2中可以查看到clone后的image</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	flatten pool1/nbd0s1c1,pool2/nbd0s1c2:</p>
<p>
	rbd flatten pool1/nbd0s1c1</p>
<p>
	rbd flatten pool2/nbd0s1c2</p>
<p>
	在flatten过程中，取消node2节点的NTP服务，调整node2节点的时间，比集群时间慢5分钟，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	集群有告警，时钟偏移</p>
<p>
	io读写正常，没有数据一致性问题</p>
<p>
	flatten过程成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	5分钟后，启动node2的NTP服务，调整时间，与集群时间相差0.05秒以内，重启node2节点的所有osd、mon进程，观察集群状态，io状态</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	mon、osd启动正常，集群状态为OK</p>
<p>
	io读写正常，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	将pool1/nbd0s1c1, pool2/nbd0s1c2用nbd导出，挂载到文件系统/root/c1 , /root/c2, 比较两个文件系统里面30g.file文件的一致性</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	nbd导出成功，挂载文件系统成功</p>
<p>
	文件比较一致</p>
<p>
	io读写正常，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[5]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[6]]></step_number>
	<actions><![CDATA[<p>
	重复步骤1到步骤5，在步骤2调整时间时，换成调整node1的时间，比集群快5分钟，步骤3重启node1的所有osd，mon</p>
]]></actions>
	<expectedresults><![CDATA[]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1905" name="PG数量扩展（mon与osd共存）">
	<node_order><![CDATA[1016]]></node_order>
	<externalid><![CDATA[257]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将快照pool1/nbd0@s1分别clone到pool1和pool2中：</p>
<p>
	rbd snap protest pool1/nbd0@s1</p>
<p>
	rbd clone pool1/nbd0@s1 pool1/nbd0s1c1</p>
<p>
	rbd clone pool1/nbd0@s1 pool2/nbd0s1c2</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	创建clone成功，在pool1和pool2中可以查看到clone后的image</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	flatten pool1/nbd0s1c1,pool2/nbd0s1c2:</p>
<p>
	rbd flatten pool1/nbd0s1c1</p>
<p>
	rbd flatten pool2/nbd0s1c2</p>
<p>
	在flatten过程中，将pool1，pool2的pg数量扩展到原来的4倍。</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	pg扩展成功，集群状态最后为OK</p>
<p>
	flatten成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	将pool1/nbd0s1c1, pool2/nbd0s1c2用nbd导出，挂载到文件系统/root/c1 , /root/c2, 比较两个文件系统里面30g.file文件的一致性</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	nbd导出成功，挂载文件系统成功</p>
<p>
	文件比较一致</p>
<p>
	io读写正常，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="1907" name="副本数调整（mon与osd共存）">
	<node_order><![CDATA[1017]]></node_order>
	<externalid><![CDATA[258]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<img alt="" src="/testlink/third_party/kcfinder/upload_area/images/rbd-nbd%E7%BB%84%E7%BD%91%E5%9B%BE.PNG" style="width: 431px; height: 274px;" /></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	1，node1，node2，node3一共3个主机节点，这3个节点都为osd，mon节点，每个节点上若干个osd进程，其中node1是leader mon</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	2，集群状态正常，已经创建了rbd pool和rbd image，已经将rbd image在client端通过NBD的方式导出</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	3，副本数为2</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	4，客户端、服务器前端与Public Switch连接正常，服务器后端与Cluster Switch连接正常</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	5，在client端将nbd0（pool1）创建成ext4的文件系统，分别挂载到/nbd0目录下，在/nbd0 目录下写一个30G大小的文件30g.file</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	6，文件写完成后，对nbd0做快照pool1/nbd0@s1</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);">
	7，对裸设备nbd1（pool1），nbd2（pool2）进行裸设备随机读写，对/nbd0进行随机写文件（<span style="font-size: 13.3333px;">写同名文件，rate=200k，保证COW持续的时间长</span><span style="font-size: 12px;">），带一致性校验</span></div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[3]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>7</status>
	<is_open>1</is_open>
	<active>1</active>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	在读写过程中，将快照pool1/nbd0@s1分别clone到pool1和pool2中：</p>
<p>
	rbd snap protest pool1/nbd0@s1</p>
<p>
	rbd clone pool1/nbd0@s1 pool1/nbd0s1c1</p>
<p>
	rbd clone pool1/nbd0@s1 pool2/nbd0s1c2</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	创建clone成功，在pool1和pool2中可以查看到clone后的image</p>
<p>
	io读写没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<p>
	flatten pool1/nbd0s1c1,pool2/nbd0s1c2:</p>
<p>
	rbd flatten pool1/nbd0s1c1</p>
<p>
	rbd flatten pool2/nbd0s1c2</p>
<p>
	在flatten过程中，将pool1，pool2的副本数调整到3。</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	副本数调整成功，集群状态最后为OK</p>
<p>
	flatten成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<p>
	将pool1/nbd0s1c1, pool2/nbd0s1c2用nbd导出，挂载到文件系统/root/c1 , /root/c2, 比较两个文件系统里面30g.file文件的一致性</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	nbd导出成功，挂载文件系统成功</p>
<p>
	文件比较一致</p>
<p>
	io读写正常，没有数据一致性问题</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<p>
	删除nbd0的快照</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	删除快照成功</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>
</testsuite></testsuite>
	</data>